<UserControl x:Class="HCI_zadatak_2.userControls.EditEvent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HCI_zadatak_2.userControls"
			 xmlns:popups="clr-namespace:HCI_zadatak_2.popups"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                                               xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"

			 mc:Ignorable="d" 
			 d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<Style x:Key="FocusTextBox" TargetType="Grid">
			<Style.Triggers>
				<DataTrigger Binding="{Binding ElementName=EventNameTextBox, Path=IsVisible}" Value="True">
					<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=EventNameTextBox}"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>

    <UserControl.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Help" Executed="HelpBinding_Executed"></CommandBinding>
    </UserControl.CommandBindings>

    <ScrollViewer VerticalScrollBarVisibility="Auto">

        <Grid Margin="5,5,5,5" Style="{StaticResource FocusTextBox}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="232*"></ColumnDefinition>
				<ColumnDefinition Width="193*"></ColumnDefinition>
				<ColumnDefinition Width="348*"></ColumnDefinition>

			</Grid.ColumnDefinitions>

			<!-- Active will be set to true, whereas offsetX and offsetY will be set via drag & drop -->
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto" MinHeight="52"></RowDefinition>
				<RowDefinition Height="Auto" MinHeight="58.4"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
			</Grid.RowDefinitions>

			<Label Grid.Column="0" Grid.Row="0" Margin="5,5,8,4.2">Id:</Label>
			<Label x:Name="EventIdTextBox" Width ="180" Grid.Column="1" Grid.Row="0" Margin="2,5,0,4.2" Content="{Binding Path=Window.appContext.SelectedEvent.Id, Mode=TwoWay}" HorizontalAlignment="Left"></Label>

			<Label Grid.Column="0" Grid.Row="1" Margin="5,5.8,8,5">Name:</Label>
			<TextBox x:Name="EventNameTextBox" Width ="180" Grid.Column="1" Grid.Row="1" Margin="2,5.8,0,5" Text="{Binding Path=Window.appContext.SelectedEvent.Name, Mode=TwoWay}" HorizontalAlignment="Left" LostFocus="EventNameTextBox_LostFocus"></TextBox>
			<Image x:Name="nameExclamIcon" Grid.Row="1" Grid.Column="2"  Margin="4.2,5,0,4.2" Width="40" Source="{Binding Path=Window.appContext.ExclamPath}" HorizontalAlignment="Left" Visibility="Hidden">
				<Image.ToolTip>
					<ToolTip Content="Name cannot be empty" />
				</Image.ToolTip>
			</Image>

			<Label Grid.Column="0" Grid.Row="2" Margin="5,5,8,4.2">Description:</Label>
			<TextBox x:Name="EventDescriptionTextBox" Width ="180" Grid.Column="1" Grid.Row="2" Margin="2,5,0,4.2" Text="{Binding Path=Window.appContext.SelectedEvent.Description, Mode=TwoWay}" HorizontalAlignment="Left" TextWrapping="Wrap" AcceptsReturn="True" LostFocus="EventDescriptionTextBox_LostFocus"></TextBox>
			<Image x:Name="descriptionExclamIcon" Grid.Row="2" Grid.Column="2"  Margin="4.2,5,0,4.2" Width="40" Source="{Binding Path=Window.appContext.ExclamPath}" HorizontalAlignment="Left" Visibility="Hidden">
				<Image.ToolTip>
					<ToolTip Content="Description cannot be empty" />
				</Image.ToolTip>
			</Image>

			<Label Grid.Column="1" Grid.Row="3" Margin="2,5.8,0,5" HorizontalAlignment="Left" Width="133">Event type (select one):</Label>

			<DataGrid Grid.Column="1" Grid.Row="4" x:Name="eventTypesView" SelectionMode="Single" ItemsSource="{Binding Path=Window.appContext.EventTypes}" IsReadOnly="True" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True" PreviewMouseLeftButtonDown="EventTypesView_PreviewMouseLeftButtonDown" MouseMove="EventTypesView_MouseMove" HorizontalAlignment="Left" Margin="2,5,0,20.2" Width="180">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Type" Width="SizeToCells" Binding="{Binding Type, Mode=TwoWay}"></DataGridTextColumn>
					<DataGridTextColumn Header="Name" Width="SizeToCells" Binding="{Binding Name, Mode=TwoWay}"></DataGridTextColumn>
				</DataGrid.Columns>
			</DataGrid>


			<Label Grid.Column="0" Grid.Row="5" Margin="5,4.8,8,5.2">Alcohol serving category:</Label>
			<!-- TODO: FIX -->
			<ComboBox x:Name="EventAlcoholServingCategory" SelectedValuePath="Content" Margin="2,10.8,0,11.2" Grid.Column="1" Grid.Row="5" Width="180" HorizontalAlignment="Left">
				<ComboBoxItem IsSelected="True">None</ComboBoxItem>
				<ComboBoxItem>Bring</ComboBoxItem>
				<ComboBoxItem>Buy</ComboBoxItem>
			</ComboBox>


			<Grid Grid.ColumnSpan="2" Grid.Row="5" Margin="10,49.8,5.8,9.6" Grid.RowSpan="2">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.2*"></ColumnDefinition>
					<ColumnDefinition Width="0.2*"></ColumnDefinition>
					<ColumnDefinition Width="0.2*"></ColumnDefinition>
					<ColumnDefinition Width="0.2*"></ColumnDefinition>
					<ColumnDefinition Width="0.2*"></ColumnDefinition>
				</Grid.ColumnDefinitions>

				<Label Grid.Column="0" Margin="5,5,5,5">Icon:</Label>
				<Image x:Name="previewIcon" Grid.Column="2" Margin="5,5,5,5" Width="40" Height="40" Source="{Binding Path=Window.appContext.SelectedEvent.IconPath}" HorizontalAlignment="Center"></Image>
                <Button x:Name="browseBtn" HorizontalAlignment="Left" Grid.Column="3" Grid.ColumnSpan="2"  Margin="5,5,5,5" Height="30" Width="100" Click="BrowseBtn_Click_1">Choose picture</Button>
            </Grid>

			<Label Grid.Column="0" Grid.Row="7" Margin="5,5.4,8,5.4">Suitable for handicapped:</Label>
			<!-- TODO: FIX -->
            <ComboBox x:Name="EventIsSutiableForHandicapped" Margin="2,5.4,0,5.4" SelectedValuePath="Content" Grid.Column="1" Grid.Row="7" Width="180" HorizontalAlignment="Left">
				<ComboBoxItem IsSelected="True">True</ComboBoxItem>
				<ComboBoxItem>False</ComboBoxItem>
			</ComboBox>

			<Label Grid.Column="0" Grid.Row="8" Margin="5,3.6,8,5.6">Smoking allowed:</Label>
			<!-- TODO: FIX -->
            <ComboBox x:Name="EventIsSmokingAllowed" Margin="2,3.6,0,5.6" SelectedValuePath="Content" Grid.Column="1" Grid.Row="8" Width="180" HorizontalAlignment="Left">
				<ComboBoxItem IsSelected="True">True</ComboBoxItem>
				<ComboBoxItem>False</ComboBoxItem>
			</ComboBox>

			<Label Grid.Column="0" Grid.Row="9" Margin="5,4.4,8,4.8">Outdoors:</Label>
			<!-- TODO: FIX -->
            <ComboBox x:Name="EventIsOutdoors" Margin="2,4.4,0,4.8" SelectedValuePath="Content" Grid.Column="1" Grid.Row="9" Width="180" HorizontalAlignment="Left">
				<ComboBoxItem IsSelected="True">True</ComboBoxItem>
				<ComboBoxItem>False</ComboBoxItem>
			</ComboBox>

			<Label Grid.Column="0" Grid.Row="10" Margin="5,5.2,8,5.6">Price category:</Label>
			<!-- TODO: FIX -->
			<ComboBox x:Name="EventPriceCategory" Margin="2,5.2,0,5.6" SelectedValuePath="Content" Grid.Column="1" Grid.Row="10" Width="180" HorizontalAlignment="Left">
				<ComboBoxItem IsSelected="True">Free</ComboBoxItem>
				<ComboBoxItem>Low</ComboBoxItem>
				<ComboBoxItem>Mid</ComboBoxItem>
				<ComboBoxItem>High</ComboBoxItem>
			</ComboBox>

			<Label Grid.Column="0" Grid.Row="11" Margin="5,4.4,8,4.8">Expected audience:</Label>
			<TextBox x:Name="EventExpectedAudienceTextBox" Width ="180" Grid.Column="1" Grid.Row="11" Margin="2,4.4,0,4.8" MaxLength="6" Text="{Binding Path=Window.appContext.SelectedEvent.ExpectedAudience, Mode=TwoWay}" HorizontalAlignment="Left" LostFocus="EventExpectedAudienceTextBox_LostFocus" PreviewTextInput="EventExpectedAudienceTextBox_PreviewTextInput" DataObject.Pasting="TextBoxPasting"></TextBox>
			<Image x:Name="expectedAudienceExclamIcon" Grid.Row="11" Grid.Column="2"  Margin="4.2,4.4,0,4.8" Width="40" Source="{Binding Path=Window.appContext.ExclamPath}" HorizontalAlignment="Left" Visibility="Hidden">
				<Image.ToolTip>
					<ToolTip Content="Expected audience cannot be empty" />
				</Image.ToolTip>
			</Image>

			<Label Grid.Column="0" Grid.Row="12" Margin="5,5.2,8,5.6">Date:</Label>
			<DatePicker Margin="2,5.2,0,5.6" x:Name="EventDate" Grid.Column="1" Grid.Row="12" SelectedDate="{Binding Path=Window.appContext.SelectedEvent.Date, Mode=TwoWay}" Width="180" HorizontalAlignment="Left" LostFocus="EventDate_LostFocus" DataObject.Pasting="TextBoxPasting" DisplayDateStart="{x:Static sys:DateTime.Today}">
				<DatePicker.Resources>
					<Style TargetType="DatePickerTextBox">
						<Setter Property="IsReadOnly" Value="True"/>
					</Style>
				</DatePicker.Resources>
			</DatePicker>
			<Image x:Name="dateExclamIcon" Grid.Row="12" Grid.Column="2"  Margin="4.2,5.2,0,4.6" Width="40" Source="{Binding Path=Window.appContext.ExclamPath}" HorizontalAlignment="Left" Visibility="Hidden">
				<Image.ToolTip>
					<ToolTip Content="Date cannot be empty" />
				</Image.ToolTip>
			</Image>

            <!--
			<Label Grid.Column="0"  Grid.Row="13" Margin="5,4.4,0,4.6" HorizontalAlignment="Left" Width="82">Tags of event:</Label>
			<ScrollViewer Grid.Column="0"  Grid.Row="13" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="5,34.4,7,34.6" >
				<DataGrid x:Name="tagsOfEventView" SelectionMode="Single"  IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding Path=Window.appContext.TagsOfSelectedEvent, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True" Width="200" HorizontalAlignment="Left" Margin="5,5,5,5" CanUserResizeColumns="False">
					<DataGrid.Columns>
						<DataGridTextColumn Header="Id" Width="SizeToCells" Binding="{Binding Id}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Color">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <xctk:ColorPicker IsEnabled="False" SelectedColor="{Binding Color,UpdateSourceTrigger = PropertyChanged}" UsingAlphaChannel="False"></xctk:ColorPicker>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
				</DataGrid>
                
			</ScrollViewer>

			<Button x:Name="removeTagBtn" HorizontalAlignment="Left" Grid.Row="13" Margin="8,32.4,0,31.6" Width="120" Click="RemoveTagBtn_Click" Grid.Column="1">Remove selected tag</Button>

			<Label Grid.Column="0" Grid.Row="16" Margin="5,5.4,0,3.8" HorizontalAlignment="Left" Width="136">Tags that can be added:</Label>
			
            <ScrollViewer Grid.Column="0" Grid.Row="17" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.ColumnSpan="2" Margin="5,1.2,25.8,25.4">
				<DataGrid x:Name="tagsView" SelectionMode="Single" ItemsSource="{Binding Path=Window.appContext.Tags}" IsReadOnly="True" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Left" Margin="5,5,5,5" CanUserResizeColumns="False">

					<DataGrid.Columns>
						<DataGridTextColumn Header="Id" Width="SizeToCells" Binding="{Binding Id}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Color">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <xctk:ColorPicker IsEnabled="False" SelectedColor="{Binding Color,UpdateSourceTrigger = PropertyChanged}" UsingAlphaChannel="False"></xctk:ColorPicker>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
				</DataGrid>
			</ScrollViewer>
            
            
			<Button x:Name="addTagToTagsOfEvnetBtn" HorizontalAlignment="Left" Grid.Row="17" Grid.Column="1" Margin="8,12.2,0,10.4" Width="160" Click="AddTagToTagsOfEventBtn_Click" Height="40">Add selected tag to event</Button>
            -->
            
			<Button x:Name="editEventBtn" HorizontalAlignment="Center" Grid.Row="19" Margin="13,50.6,19.8,4.8" Width="160" Click="EditEventBtn_Click" Grid.Column="1" Height="40">Save changes to event</Button>

		</Grid>
	</ScrollViewer>
</UserControl>
